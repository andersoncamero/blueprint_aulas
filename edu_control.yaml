blueprint:
  name: Aula inteligente 1 - Multi dispositivos
  description: "Plugin diseñado para la automatización integral de salones de clase. Soporta múltiples luces y termostatos."
  domain: automation
  input:
    motion_sensor_battery:
      name: Sensor de Movimiento (Batería)
      description: "Un sensor de movimiento (binary_sensor) para detectar la presencia en el aula."
      default: ""
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    motion_sensor_electrical:
      name: Sensor de Movimiento (Eléctrico)
      description: "Un interruptor que simula el sensor de movimiento eléctrico."
      default: ""
      selector:
        entity:
          domain: switch

    target_lights:
      name: Iluminación del Aula
      description: "Luz o grupo de luces que se controlarán automáticamente. Puedes seleccionar múltiples."
      selector:
        target:
          entity:
            domain:
              - light
              - switch

    target_climates:
      name: Termostatos
      description: "Termostatos del aula. Puedes seleccionar múltiples equipos de clima."
      default: {}
      selector:
        target:
          entity:
            domain: climate

    classroom_status:
      name: Estado del Aula (Helper)
      description: "Helper input_select que mostrará LIBRE u OCUPADA."
      selector:
        entity:
          domain: input_select

    target_temperature:
      name: Temperatura Objetivo
      description: "Temperatura deseada cuando hay presencia en el aula."
      default: 22
      selector:
        number:
          min: 20
          max: 26
          unit_of_measurement: "°C"
          mode: slider

    off_delay:
      name: Tiempo de apagado
      description: "Tiempo de espera antes de considerar el aula libre tras no detectar presencia."
      default: 300
      selector:
        number:
          min: 60
          max: 1800
          unit_of_measurement: seconds
          mode: slider
          step: 30

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input motion_sensor_battery
    id: "battery_sensor"
  - platform: state
    entity_id: !input motion_sensor_electrical
    id: "electrical_sensor"

condition: []

action:
  - variables:
      motion_battery: !input motion_sensor_battery
      motion_electrical: !input motion_sensor_electrical
      climate_targets: !input target_climates
      lights_targets: !input target_lights
      status_entity: !input classroom_status

  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.entity_id != '' and trigger.entity_id != 'unavailable' and
                 trigger.to_state.state in ['on', 'detected'] }}
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input classroom_status
            data:
              option: "OCUPADA"

          - service: homeassistant.turn_on
            target: !input target_lights

          - service: climate.set_temperature
            target: !input target_climates
            data:
              temperature: !input target_temperature
              hvac_mode: "cool"

      - conditions:
          - condition: template
            value_template: >
              {{ trigger.entity_id != '' and trigger.entity_id != 'unavailable' and
                 trigger.to_state.state in ['off', 'clear'] }}
        sequence:
          - delay:
              seconds: !input off_delay

          - condition: template
            value_template: >-
              {%- set battery_clear = motion_battery == '' or states(motion_battery) in ['off', 'clear', 'unavailable'] -%}
              {%- set electrical_clear = motion_electrical == '' or states(motion_electrical) in ['off', 'clear', 'unavailable'] -%}
              {{ battery_clear and electrical_clear }}

          - service: input_select.select_option
            target:
              entity_id: !input classroom_status
            data:
              option: "LIBRE"

          - service: homeassistant.turn_off
            target: !input target_lights

          - service: climate.set_hvac_mode
            target: !input target_climates
            data:
              hvac_mode: "off"
