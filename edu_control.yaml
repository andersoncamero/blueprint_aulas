blueprint:
  name: Aula inteligente 1
  description: "Plugin diseñado para la automatización integral de salones de clase. Optimiza la gestión y operación del entorno educativo."
  domain: automation
  input:
    motion_sensor_battery:
      name: Motion Sensor Battery
      description: "Un sensor de movimiento (binary_sensor) para detectar la presencia en el aula."
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    motion_sensor_electrical:
      name: Motion Sensor Electrical
      description: "Un interruptor que simula el sensor de movimiento eléctrico."
      selector:
        entity:
          domain: switch

    target_light:
      name: Light
      description: "Una luz que se encenderá o apagará según la presencia detectada."
      selector:
        entity:
          domain: light

    target_climate:
      name: Termostato
      description: "Un termostato para ajustar la temperatura del aula."
      selector:
        target:
          entity:
            domain: climate

    off_delay:
      name: Tiempo de apagado
      description: "Tiempo de espera antes de apagar tras no detectar presencia (ej: 5 minutos)."
      default: 300
      selector:
        number:
          min: 30
          max: 3600
          unit_of_measurement: seconds
          mode: slider

mode: single

triggers:
  - trigger: state
    entity_id: !input motion_sensor_battery
  - trigger: state
    entity_id: !input motion_sensor_electrical

actions:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
          - service: climate.set_hvac_mode
            target: !input target_climate
            data:
              hvac_mode: "cool"

      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
        sequence:
          - delay:
              seconds: !input off_delay
          - service: light.turn_off
            target:
              entity_id: !input target_light
          - service: climate.set_hvac_mode
            target: !input target_climate
            data:
              hvac_mode: "off"
